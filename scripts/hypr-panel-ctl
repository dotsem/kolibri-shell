#!/usr/bin/env zsh
# hypr-panel-ctl - Control Hypr Flutter panels via DBus
# This is a simple messenger that forwards all commands to Dart for processing

set -euo pipefail

readonly DBUS_SERVICE="com.hyprflutter.Panel"
readonly DBUS_PATH="/com/hyprflutter/Panel"
readonly DBUS_INTERFACE="com.hyprflutter.Panel"

# Check if service is running
check_service() {
    if ! dbus-send --session --print-reply --dest=org.freedesktop.DBus \
        /org/freedesktop/DBus org.freedesktop.DBus.ListNames 2>/dev/null | \
        grep -q "$DBUS_SERVICE"; then
        echo "Error: Hypr Flutter panel service is not running" >&2
        echo "Make sure the Flutter app is running" >&2
        return 1
    fi
    return 0
}

# Send command to Dart service
execute_command() {
    local cmd="$*"
    
    # Special case: if no args, show help from Dart
    if [[ -z "$cmd" ]]; then
        cmd="help"
    fi
    
    # Send the entire command string to Dart's Execute method
    local result
    result=$(dbus-send --session --print-reply \
        --dest="$DBUS_SERVICE" \
        "$DBUS_PATH" \
        "${DBUS_INTERFACE}.Execute" \
        "string:$cmd" 2>&1)
    
    local exit_code=$?
    
    # If it's a list command, extract the array values
    if [[ "$cmd" == "list"* ]]; then
        echo "$result" | grep -oP '(?<=string ")[^"]+' || true
    # If it's help or any string response, extract the string
    elif echo "$result" | grep -q "string"; then
        echo "$result" | sed -n 's/.*string "\(.*\)"/\1/p' | sed 's/\\n/\n/g'
    # For other commands, just check success
    elif [[ $exit_code -eq 0 ]]; then
        return 0
    else
        # Show error message if any
        echo "$result" | grep "Error" || echo "Command failed"
        return 1
    fi
}

main() {
    # Check if service is available
    if ! check_service; then
        exit 1
    fi
    
    # Forward all arguments as a single command string to Dart
    execute_command "$@"
}

main "$@"
